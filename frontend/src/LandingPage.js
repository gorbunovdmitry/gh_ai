import React from 'react';
import { useNavigate } from 'react-router-dom';
import './Chat.css';

function LandingPage() {
  const navigate = useNavigate();
  
  console.log('LandingPage rendered');

  // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
  React.useEffect(() => {
    if (window.gtag) {
      window.gtag('event', 'GHShturm_landing_view');
    }
    if (window.ym) {
      window.ym(96171108, 'reachGoal', 'GHShturm_landing_view');
    }
  }, []);

  const handleAssistantClick = (assistantType) => {
    if (window.gtag) {
      window.gtag('event', `GHShturm_${assistantType}_click`);
    }
    if (window.ym) {
      window.ym(96171108, 'reachGoal', `GHShturm_${assistantType}_click`);
    }
    navigate(`/${assistantType}`);
  };

  return (
    <div style={{
      minHeight: '100vh',
      background: '#2a2a2a',
      padding: '20px',
      fontFamily: 'Roboto, Arial, sans-serif',
      position: 'relative'
    }}>
      {/* Header */}
      <div style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'flex-start',
        marginBottom: '60px'
      }}>
        <div>
          {/* –õ–æ—è–ª—å–Ω–æ—Å—Ç—å */}
          <div style={{
            color: 'white',
            fontSize: '14px',
            fontWeight: '400',
            margin: '0 0 8px 0',
            lineHeight: '1'
          }}>
            –õ–æ—è–ª—å–Ω–æ—Å—Ç—å
          </div>
          
          {/* Growth –®—Ç—É—Ä–º */}
          <h1 style={{
            color: 'white',
            fontSize: '48px',
            fontWeight: 'bold',
            margin: '0 0 8px 0',
            lineHeight: '1'
          }}>
            <span style={{ color: '#7ed321' }}>Growth</span> –®—Ç—É—Ä–º
          </h1>
          
          {/* –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ */}
          <div style={{
            background: '#7ed321',
            color: '#2a2a2a',
            fontSize: '16px',
            fontWeight: '500',
            padding: '6px 12px',
            borderRadius: '16px',
            display: 'inline-block',
            margin: '0'
          }}>
            –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫
          </div>
        </div>
        
        {/* BTBIT –ü–æ–º–æ—â—å badge */}
        <div style={{
          background: 'white',
          color: '#333',
          padding: '8px 16px',
          borderRadius: '16px',
          fontSize: '14px',
          fontWeight: 'bold',
          position: 'relative'
        }}>
          <span style={{ color: 'red' }}>BTBIT</span> –ü–æ–º–æ—â—å
          
          {/* "–ë–æ–≥ –≤ –ø–æ–º–æ—â—å" –∫–∞—Ä—Ç–∏–Ω–∫–∞ */}
          <img 
            src="/gh_ai/img/god.png" 
            alt="–ë–æ–≥ –≤ –ø–æ–º–æ—â—å" 
            style={{
              position: 'absolute',
              top: '-20px',
              right: '-20px',
              width: '60px',
              height: '60px',
              objectFit: 'contain'
            }}
            onError={(e) => {
              e.target.style.display = 'none';
            }}
          />
        </div>
      </div>

      {/* Cards Container */}
      <div style={{
        maxWidth: '600px',
        margin: '0 auto',
        display: 'flex',
        flexDirection: 'column',
        gap: '20px'
      }}>
        
        {/* –°—Ç–µ—Ä–µ–æ—Ç–∏–ø—ã */}
        <div 
          onClick={() => handleAssistantClick('stereotypes')}
          style={{
            background: '#4a5a3a',
            borderRadius: '16px',
            padding: '24px',
            cursor: 'pointer',
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            transition: 'transform 0.2s ease, box-shadow 0.2s ease',
            boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',
            position: 'relative'
          }}
          onMouseEnter={(e) => {
            e.target.style.transform = 'translateY(-2px)';
            e.target.style.boxShadow = '0 8px 30px rgba(0, 0, 0, 0.4)';
          }}
          onMouseLeave={(e) => {
            e.target.style.transform = 'translateY(0)';
            e.target.style.boxShadow = '0 4px 20px rgba(0, 0, 0, 0.3)';
          }}
        >
          <div>
            <h2 style={{
              color: '#7ed321',
              fontSize: '24px',
              fontWeight: 'bold',
              margin: '0 0 8px 0'
            }}>
              –°–¢–ï–†–ï–û–¢–ò–ü–´
            </h2>
            <div style={{
              background: '#000',
              color: 'white',
              padding: '8px 12px',
              borderRadius: '16px',
              fontSize: '14px',
              display: 'inline-block'
            }}>
              –≠–¢–ê–ü 1. –ß–¢–û –•–û–†–û–®–û, –ß–¢–û –ü–õ–û–•–û?
            </div>
          </div>
          
          {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º —Å–≤–µ—á–µ–Ω–∏—è */}
          <div style={{
            position: 'relative',
            width: '60px',
            height: '60px'
          }}>
            <img 
              src="/gh_ai/img/–°—Ç–µ—Ä–µ–æ—Ç–∏–ø—ã.png" 
              alt="–°—Ç–µ—Ä–µ–æ—Ç–∏–ø—ã" 
              style={{
                width: '60px',
                height: '60px',
                objectFit: 'contain',
                filter: 'drop-shadow(0 0 10px rgba(126, 211, 33, 0.5))'
              }}
              onError={(e) => {
                e.target.style.display = 'none';
                e.target.parentNode.innerHTML = 'üòä';
                e.target.parentNode.style.fontSize = '30px';
                e.target.parentNode.style.textAlign = 'center';
                e.target.parentNode.style.lineHeight = '60px';
              }}
            />
          </div>
        </div>

        {/* –ò–Ω–≤–µ—Ä—Å–∏—è */}
        <div 
          onClick={() => handleAssistantClick('inversion')}
          style={{
            background: '#4a5a3a',
            borderRadius: '16px',
            padding: '24px',
            cursor: 'pointer',
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            transition: 'transform 0.2s ease, box-shadow 0.2s ease',
            boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',
            position: 'relative'
          }}
          onMouseEnter={(e) => {
            e.target.style.transform = 'translateY(-2px)';
            e.target.style.boxShadow = '0 8px 30px rgba(0, 0, 0, 0.4)';
          }}
          onMouseLeave={(e) => {
            e.target.style.transform = 'translateY(0)';
            e.target.style.boxShadow = '0 4px 20px rgba(0, 0, 0, 0.3)';
          }}
        >
          <div>
            <h2 style={{
              color: '#7ed321',
              fontSize: '24px',
              fontWeight: 'bold',
              margin: '0 0 8px 0'
            }}>
              –ò–ù–í–ï–†–°–ò–Ø
            </h2>
            <div style={{
              background: '#000',
              color: 'white',
              padding: '8px 12px',
              borderRadius: '16px',
              fontSize: '14px',
              display: 'inline-block'
            }}>
              –≠–¢–ê–ü 2. –ö–ê–ö –ù–ê–ö–ê–ó–ê–¢–¨?
            </div>
          </div>
          
          {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º —Å–≤–µ—á–µ–Ω–∏—è */}
          <div style={{
            position: 'relative',
            width: '60px',
            height: '60px'
          }}>
            <img 
              src="/gh_ai/img/–ò–Ω–≤–µ—Ä—Å–∏—è.png" 
              alt="–ò–Ω–≤–µ—Ä—Å–∏—è" 
              style={{
                width: '60px',
                height: '60px',
                objectFit: 'contain',
                filter: 'drop-shadow(0 0 10px rgba(126, 211, 33, 0.5))'
              }}
              onError={(e) => {
                e.target.style.display = 'none';
                e.target.parentNode.innerHTML = 'üòà';
                e.target.parentNode.style.fontSize = '30px';
                e.target.parentNode.style.textAlign = 'center';
                e.target.parentNode.style.lineHeight = '60px';
              }}
            />
          </div>
        </div>

        {/* –ü–µ—Ä–µ–Ω–æ—Å */}
        <div 
          onClick={() => handleAssistantClick('transfer')}
          style={{
            background: '#4a5a3a',
            borderRadius: '16px',
            padding: '24px',
            cursor: 'pointer',
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            transition: 'transform 0.2s ease, box-shadow 0.2s ease',
            boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',
            position: 'relative'
          }}
          onMouseEnter={(e) => {
            e.target.style.transform = 'translateY(-2px)';
            e.target.style.boxShadow = '0 8px 30px rgba(0, 0, 0, 0.4)';
          }}
          onMouseLeave={(e) => {
            e.target.style.transform = 'translateY(0)';
            e.target.style.boxShadow = '0 4px 20px rgba(0, 0, 0, 0.3)';
          }}
        >
          <div>
            <h2 style={{
              color: '#7ed321',
              fontSize: '24px',
              fontWeight: 'bold',
              margin: '0 0 8px 0'
            }}>
              –ü–ï–†–ï–ù–û–°
            </h2>
            <div style={{
              background: '#000',
              color: 'white',
              padding: '8px 12px',
              borderRadius: '16px',
              fontSize: '14px',
              display: 'inline-block'
            }}>
              –≠–¢–ê–ü 3. –û–¢–ö–£–î–ê –£–ö–†–ê–°–¢–¨?
            </div>
          </div>
          
          {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º —Å–≤–µ—á–µ–Ω–∏—è */}
          <div style={{
            position: 'relative',
            width: '60px',
            height: '60px'
          }}>
            <img 
              src="/gh_ai/img/–ü–µ—Ä–µ–Ω–æ—Å.png" 
              alt="–ü–µ—Ä–µ–Ω–æ—Å" 
              style={{
                width: '60px',
                height: '60px',
                objectFit: 'contain',
                filter: 'drop-shadow(0 0 10px rgba(126, 211, 33, 0.5))'
              }}
              onError={(e) => {
                e.target.style.display = 'none';
                e.target.parentNode.innerHTML = 'üòå';
                e.target.parentNode.style.fontSize = '30px';
                e.target.parentNode.style.textAlign = 'center';
                e.target.parentNode.style.lineHeight = '60px';
              }}
            />
          </div>
        </div>
      </div>
    </div>
  );
}

export default LandingPage; 